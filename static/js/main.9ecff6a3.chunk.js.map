{"version":3,"sources":["components/Budget.js","components/Remaining.js","components/Spent.js","components/Search.js","components/Transactions.js","components/AddTransaction.js","components/Chart.js","App.js","index.js"],"names":["Budget","budgetCalc","className","Remaining","remainingCalc","Spent","spentCalc","Search","handleSearchText","onChange","event","target","value","type","placeholder","Transactions","transaction","onTime","map","tr","name","cost","onClick","id","AddTransaction","onSave","useState","nameText","setNameText","costText","setCostText","valueText","setValueText","onSubmit","preventDefault","isNaN","alert","trim","length","currentTarget","selectedType","Chart","data","labels","datasets","backgroundColor","borderColor","borderWidth","height","width","App","setTransaction","searchText","setSearchText","useEffect","savedLists","JSON","parse","localStorage","getItem","setItem","stringify","datum","reduce","a","b","filter","trans","toLocaleLowerCase","includes","newTransaction","parseInt","nanoid","newTransactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAMeA,EAJA,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAChB,OAAO,sBAAKC,UAAU,SAAf,yBAAkCD,QCG5BE,EAJG,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACnB,OAAO,sBAAKF,UAAU,YAAf,4BAAwCE,QCGlCC,EAJD,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACf,OAAO,sBAAKJ,UAAU,QAAf,+BAAuCI,QCWjCC,EAZA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBAChB,OACE,qBAAKN,UAAU,SAAf,SACE,uBACEO,SAAU,SAACC,GAAD,OAAWF,EAAiBE,EAAMC,OAAOC,QACnDC,KAAK,OACLC,YAAY,yB,QCWLC,EAhBM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,OACnC,OACE,qBAAKf,UAAU,eAAf,SACGc,EAAYE,KAAI,SAACC,GAAD,OACf,sBAAiBjB,UAAWiB,EAAGN,KAA/B,UACE,sBAAKX,UAAU,mBAAf,cAAoCiB,EAAGC,QACvC,sBAAKlB,UAAU,mBAAf,kBACKiB,EAAGE,KACN,cAAC,IAAD,CAASnB,UAAU,SAASoB,QAAS,kBAAML,EAAOE,EAAGI,YAJ/CJ,EAAGI,UC0DNC,EA/DQ,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACxB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCJ,mBAAS,UAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAcA,OACE,uBAAMC,SAbS,SAACvB,GAChBA,EAAMwB,iBACFC,MAAMN,GACRO,MAAM,kCACGT,EAASU,OAAOC,OAAS,IAClCb,EAAOE,EAAUE,EAAUE,GAC3BH,EAAY,IACZE,EAAY,IACZE,EAAa,YAKf,UACE,sBAAK9B,UAAU,kBAAf,UACE,sBAAKA,UAAU,YAAf,UACE,0CACA,uBACEA,UAAU,cACVW,KAAK,OACLC,YAAY,sBACZF,MAAOe,EACPlB,SAAU,SAACC,GAAD,OAAWkB,EAAYlB,EAAM6B,cAAc3B,aAGzD,sBAAKV,UAAU,YAAf,UACE,0CACA,uBACEA,UAAU,cACVW,KAAK,OACLC,YAAY,sBACZF,MAAOiB,EACPpB,SAAU,SAACC,GAAD,OAAWoB,EAAYpB,EAAMC,OAAOC,aAGlD,sBAAKV,UAAU,YAAf,UACE,0CACA,yBACEA,UAAU,eACVU,MAAOmB,EACPtB,SAAU,SAACC,GACT,IAAM8B,EAAe9B,EAAMC,OAAOC,MAClCoB,EAAaQ,IALjB,UAQE,wBAAQ5B,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,6BAKN,wBAAQV,UAAU,OAAOW,KAAK,SAA9B,sB,QC/BS4B,EAxBD,SAAC,GAAkC,IAAhCrC,EAA+B,EAA/BA,cAAeE,EAAgB,EAAhBA,UAC9B,OACE,8BACE,cAAC,IAAD,CACEoC,KAAM,CACJC,OAAQ,CAAC,YAAa,gBACtBC,SAAU,CACR,CACEF,KAAM,CAACtC,IAAiBE,KAExBuC,gBAAiB,CAAC,qBAAsB,oBAExCC,YAAa,CAAC,qBAAsB,oBACpCC,YAAa,KAInBC,OAAQ,IACRC,MAAO,SCkGAC,EA7GH,WACV,MAAsCxB,mBAAS,IAA/C,mBAAOV,EAAP,KAAoBmC,EAApB,KAEA,EAAoCzB,mBAAS,IAA7C,mBAAO0B,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACR,IAAMC,EAAaC,KAAKC,MACtBC,aAAaC,QAAQ,6BAGnBJ,GACFJ,EAAeI,KAEhB,IAEHD,qBAAU,WACRI,aAAaE,QACX,2BACAJ,KAAKK,UAAU7C,MAEhB,CAACA,IAEJ,IAoBMZ,EAAgB,WACpB,GAAIY,EAIF,OAHYA,EACTE,KAAI,SAAC4C,GAAD,OAAWA,EAAMzC,QACrB0C,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,IAezB3D,EAAY,WAChB,GAAIU,EAOF,OANoBA,EAAYkD,QAC9B,SAACC,GAAD,MAA0B,YAAfA,EAAMtD,QAGhBK,KAAI,SAAC4C,GAAD,OAAWA,EAAMzC,QACrB0C,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,IAU/B,OACE,sBAAK/D,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,SACE,qDAEF,sBAAKA,UAAU,SAAf,UACE,cAAC,EAAD,CAAQD,WAjCK,WACjB,GAAIe,EAKF,OAJmBA,EAAYkD,QAAO,SAACC,GAAD,MAA0B,WAAfA,EAAMtD,QAEpDK,KAAI,SAAC4C,GAAD,OAAWA,EAAMzC,QACrB0C,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,MA6BzB,cAAC,EAAD,CAAW7D,cAAeA,IAC1B,cAAC,EAAD,CAAOE,UAAWA,OAEpB,qBAAKJ,UAAU,QAAf,SACE,cAAC,EAAD,CAAOE,cAAeA,EAAeE,UAAWA,MAElD,gCACE,8CACA,cAAC,EAAD,CAAQE,iBAAkB6C,IAC1B,cAAC,EAAD,CACErC,YAAaA,EAAYkD,QAAO,SAACC,GAAD,OAC9BA,EAAM/C,KAAKgD,oBAAoBC,SAASjB,MAE1CnC,OAzBkB,SAACM,GACzB,IAAM+C,EAAiBtD,EAAYkD,QAAO,SAAC/C,GAAD,OAAQA,EAAGI,KAAOA,KAC5D4B,EAAemB,SA0Bb,gCACE,iDACA,cAAC,EAAD,CAAgB7C,OAjFE,SAACE,EAAUE,EAAUE,GAC3C,IAAIV,EAEc,YAAdU,EACFV,GAAQkD,SAAS1C,GACM,WAAdE,IACTV,EAAOkD,SAAS1C,IAGlB,IAAMyC,EAAiB,CACrB/C,GAAIiD,cACJpD,KAAMO,EACNN,KAAMA,EACNR,KAAMkB,GAGF0C,EAAe,sBAAOzD,GAAP,CAAoBsD,IACzCnB,EAAesB,aC5CnBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.9ecff6a3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Budget = ({ budgetCalc }) => {\r\n  return <div className=\"budget\">Budget: £{budgetCalc()}</div>;\r\n};\r\n\r\nexport default Budget;\r\n","import React from \"react\";\r\n\r\nconst Remaining = ({ remainingCalc }) => {\r\n  return <div className=\"remaining\">Remaining: £{remainingCalc()}</div>;\r\n};\r\n\r\nexport default Remaining;\r\n","import React from \"react\";\r\n\r\nconst Spent = ({ spentCalc }) => {\r\n  return <div className=\"spent\">Spent so far: £{spentCalc()}</div>;\r\n};\r\n\r\nexport default Spent;\r\n","import React from \"react\";\r\n\r\nconst Search = ({ handleSearchText }) => {\r\n  return (\r\n    <div className=\"search\">\r\n      <input\r\n        onChange={(event) => handleSearchText(event.target.value)}\r\n        type=\"text\"\r\n        placeholder=\"type to search...\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Transactions = ({ transaction, onTime }) => {\r\n  return (\r\n    <div className=\"transactions\">\r\n      {transaction.map((tr) => (\r\n        <div key={tr.id} className={tr.type}>\r\n          <div className=\"transaction-name\"> {tr.name}</div>\r\n          <div className=\"transaction-cost\">\r\n            £ {tr.cost}\r\n            <FaTimes className=\"delete\" onClick={() => onTime(tr.id)} />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transactions;\r\n","import React, { useState } from \"react\";\r\n\r\nconst AddTransaction = ({ onSave }) => {\r\n  const [nameText, setNameText] = useState(\"\");\r\n  const [costText, setCostText] = useState(\"\");\r\n  const [valueText, setValueText] = useState(\"income\");\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (isNaN(costText)) {\r\n      alert(\"Cost value must be a number :)\");\r\n    } else if (nameText.trim().length > 0) {\r\n      onSave(nameText, costText, valueText);\r\n      setNameText(\"\");\r\n      setCostText(\"\");\r\n      setValueText(\"income\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div className=\"add-transaction\">\r\n        <div className=\"add-label\">\r\n          <label>Name:</label>\r\n          <input\r\n            className=\"label-input\"\r\n            type=\"text\"\r\n            placeholder=\"type to add name...\"\r\n            value={nameText}\r\n            onChange={(event) => setNameText(event.currentTarget.value)}\r\n          />\r\n        </div>\r\n        <div className=\"add-label\">\r\n          <label>Cost:</label>\r\n          <input\r\n            className=\"label-input\"\r\n            type=\"text\"\r\n            placeholder=\"type to add cost...\"\r\n            value={costText}\r\n            onChange={(event) => setCostText(event.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"add-label\">\r\n          <label>Type:</label>\r\n          <select\r\n            className=\"label-select\"\r\n            value={valueText}\r\n            onChange={(event) => {\r\n              const selectedType = event.target.value;\r\n              setValueText(selectedType);\r\n            }}\r\n          >\r\n            <option value=\"expense\">expense</option>\r\n            <option value=\"income\">income</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <button className=\"save\" type=\"submit\">\r\n        Save\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTransaction;\r\n","import React from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nconst Chart = ({ remainingCalc, spentCalc }) => {\r\n  return (\r\n    <div>\r\n      <Doughnut\r\n        data={{\r\n          labels: [\"Remaining\", \"Spent so far\"],\r\n          datasets: [\r\n            {\r\n              data: [remainingCalc(), spentCalc()],\r\n\r\n              backgroundColor: [\"rgb(218, 201, 110)\", \"rgb(207, 46, 18)\"],\r\n\r\n              borderColor: [\"rgb(218, 201, 110)\", \"rgb(207, 46, 18)\"],\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        }}\r\n        height={400}\r\n        width={600}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Budget from \"./components/Budget\";\nimport Remaining from \"./components/Remaining\";\nimport Spent from \"./components/Spent\";\nimport Search from \"./components/Search\";\nimport Transaction from \"./components/Transactions\";\nimport AddTransaction from \"./components/AddTransaction\";\nimport Chart from \"./components/Chart\";\n\nconst App = () => {\n  const [transaction, setTransaction] = useState([]);\n\n  const [searchText, setSearchText] = useState(\"\");\n\n  useEffect(() => {\n    const savedLists = JSON.parse(\n      localStorage.getItem(\"react-list-budgetmonitor\")\n    );\n\n    if (savedLists) {\n      setTransaction(savedLists);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\n      \"react-list-budgetmonitor\",\n      JSON.stringify(transaction)\n    );\n  }, [transaction]);\n\n  const addTransactionn = (nameText, costText, valueText) => {\n    let cost;\n\n    if (valueText === \"expense\") {\n      cost = -parseInt(costText);\n    } else if (valueText === \"income\") {\n      cost = parseInt(costText);\n    }\n\n    const newTransaction = {\n      id: nanoid(),\n      name: nameText,\n      cost: cost,\n      type: valueText,\n    };\n\n    const newTransactions = [...transaction, newTransaction];\n    setTransaction(newTransactions);\n  };\n\n  const remainingCalc = () => {\n    if (transaction) {\n      const sum = transaction\n        .map((datum) => datum.cost)\n        .reduce((a, b) => a + b, 0);\n      return sum;\n    }\n  };\n\n  const budgetCalc = () => {\n    if (transaction) {\n      const incomeFind = transaction.filter((trans) => trans.type === \"income\");\n      const sum = incomeFind\n        .map((datum) => datum.cost)\n        .reduce((a, b) => a + b, 0);\n      return sum;\n    }\n  };\n\n  const spentCalc = () => {\n    if (transaction) {\n      const expenseFind = transaction.filter(\n        (trans) => trans.type === \"expense\"\n      );\n      const dif = expenseFind\n        .map((datum) => datum.cost)\n        .reduce((a, b) => a - b, 0);\n      return dif;\n    }\n  };\n\n  const removeTransaction = (id) => {\n    const newTransaction = transaction.filter((tr) => tr.id !== id);\n    setTransaction(newTransaction);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h1>My budget monitor</h1>\n      </div>\n      <div className=\"status\">\n        <Budget budgetCalc={budgetCalc} />\n        <Remaining remainingCalc={remainingCalc} />\n        <Spent spentCalc={spentCalc} />\n      </div>\n      <div className=\"chart\">\n        <Chart remainingCalc={remainingCalc} spentCalc={spentCalc} />\n      </div>\n      <div>\n        <h2>Transactions</h2>\n        <Search handleSearchText={setSearchText} />\n        <Transaction\n          transaction={transaction.filter((trans) =>\n            trans.name.toLocaleLowerCase().includes(searchText)\n          )}\n          onTime={removeTransaction}\n        />\n      </div>\n      <div>\n        <h2>Add Transaction</h2>\n        <AddTransaction onSave={addTransactionn} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}